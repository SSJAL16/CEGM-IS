import React, { useEffect, useState } from "react";
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Image,
  Font,
} from "@react-pdf/renderer";
import axios from "axios";
import logo from "../../../../assets/images/cokins-logo.png";

// Import Roboto Font
import RobotoRegular from "../../../../assets/fonts/Roboto-Regular.ttf";
import RobotoBold from "../../../../assets/fonts/Roboto-Bold.ttf";

import { generateCustomPurchaseOrderId } from "../../../../customize/customizeId";

const PORT = 3000;

Font.register({
  family: "Roboto",
  fonts: [{ src: RobotoRegular }, { src: RobotoBold, fontWeight: "bold" }],
});

const styles = StyleSheet.create({
  page: { padding: 20 },
  header: {
    marginBottom: 10,
    alignItems: "center",
  },
  logo: {
    width: 50,
    height: 50,
    marginBottom: 5,
  },
  companyName: {
    fontSize: 12,
    textAlign: "center",
    fontFamily: "Roboto",
    fontWeight: "bold",
  },
  reportTitle: {
    fontSize: 12,
    marginTop: 5,
    fontWeight: "bold",
    textAlign: "center",
    fontFamily: "Roboto",
  },
  sectionText: { fontSize: 10, textAlign: "center", marginTop: 5 },
  sectionText2: {
    fontSize: 10,
    textAlign: "left",
    marginTop: 5,
    fontFamily: "Roboto",
  },
  boldText: {
    fontWeight: "bold",
  },
  table: {
    display: "flex",
    width: "100%",
    border: "1px solid black",
    marginTop: 10,
  },
  tableRow: {
    flexDirection: "row",
    borderBottom: "1px solid black",
    width: "100%",
    display: "flex",
  },
  tableCol: {
    padding: 3,
    fontSize: 7,
    textAlign: "start",
    wordWrap: "break-word",
    borderRight: "1px solid black",
  },
  tableColLast: {
    padding: 3,
    fontSize: 7,
    textAlign: "start",
    wordWrap: "break-word",
  },
  tableColHeader: {
    padding: 3,
    fontSize: 8,
    fontWeight: "bold",
    textAlign: "center",
    color: "#fff",
    backgroundColor: "#4e73df",
    borderRight: "1px solid black",
  },
  // Column width styles
  colPOID: {
    width: "6%",
  },
  colSupplier: {
    width: "9%",
  },
  colDate: {
    width: "8%",
  },
  colProductName: {
    width: "10%",
  },
  colDescription: {
    width: "10%",
  },
  colStock: {
    width: "7%",
  },
  colMinStock: {
    width: "7%",
  },
  colMaxStock: {
    width: "7%",
  },
  colQuantity: {
    width: "7%",
  },
  colStatus: {
    width: "7%",
  },
  colDocStatus: {
    width: "7%",
  },
  colCreatedBy: {
    width: "15%",
  },
  footer: {
    marginTop: 20,
    fontSize: 10,
    textAlign: "center",
  },
  footerDetails: {
    fontSize: 9,
    marginTop: 5,
    textAlign: "center",
  },
});

const formatDate = (date) => {
  const options = { day: "numeric", month: "long", year: "numeric" };
  return new Date(date).toLocaleDateString("en-US", options);
};

const POpdf = ({ data }) => {
  const userDetails = JSON.parse(localStorage.getItem('user')) || {};
  const generatedBy = userDetails ? `${userDetails.firstName || ''} ${userDetails.lastName || ''}` : 'Unknown User';

  useEffect(() => {
    
  }, []);

  return (
    <Document>
      <Page style={styles.page} size="A4" orientation="landscape">
        <View style={styles.header}>
          <Image style={styles.logo} src={logo} />
          <Text style={styles.companyName}>CEGM INVENTORY SYSTEMS</Text>
          <Text style={[styles.sectionText]}>
            109 Kayang St, Baguio, 2600 Benguet
          </Text>
          <Text style={[styles.sectionText]}>cokinsgenmdse0603@gmail.com</Text>
        </View>
        <View
          style={{
            borderBottomWidth: 0.5,
            borderBottomColor: "#000",
            marginVertical: 5,
          }}
        />
        <View style={styles.left}>
          <Text style={[styles.reportTitle, { fontWeight: "bold" }]}>
            PURCHASE ORDER REPORT
          </Text>
          <Text style={styles.sectionText2}>
            <Text style={{ fontWeight: "bold" }}>No. of Purchase Order: </Text>
            {data.length}
          </Text>
          <Text style={styles.sectionText2}>
            <Text style={{ fontWeight: "bold" }}>Document Name: </Text>
            Purchase Order Report
          </Text>
          <Text style={styles.sectionText2}>
            <Text style={{ fontWeight: "bold" }}>
              Purchase Orders generated by:{" "}
            </Text>
            {generatedBy}
          </Text>
        </View>

        <View style={styles.table}>
          <View style={styles.tableRow}>
            <Text style={[styles.tableColHeader, styles.colPOID]}>PO ID</Text>
            <Text style={[styles.tableColHeader, styles.colSupplier]}>Supplier</Text>
            <Text style={[styles.tableColHeader, styles.colDate]}>Order Date</Text>
            <Text style={[styles.tableColHeader, styles.colProductName]}>Product</Text>
            <Text style={[styles.tableColHeader, styles.colDescription]}>Description</Text>
            <Text style={[styles.tableColHeader, styles.colStock]}>Current</Text>
            <Text style={[styles.tableColHeader, styles.colMinStock]}>Min</Text>
            <Text style={[styles.tableColHeader, styles.colMaxStock]}>Max</Text>
            <Text style={[styles.tableColHeader, styles.colQuantity]}>Qty</Text>
            <Text style={[styles.tableColHeader, styles.colStatus]}>Status</Text>
            <Text style={[styles.tableColHeader, styles.colDocStatus]}>Doc Status</Text>
            <Text style={[styles.tableColHeader, styles.colCreatedBy, { borderRight: 'none' }]}>Created By</Text>
          </View>

          {data.map((order, index) => (
            <React.Fragment key={index}>
              {order.items.map((item, itemIndex) => (
                <View
                  style={[
                    styles.tableRow,
                    {
                      backgroundColor: itemIndex % 2 === 0 ? "#f9f9f9" : "#fff",
                    },
                  ]}
                  key={`${index}-${itemIndex}`}
                >
                  <Text style={[styles.tableCol, styles.colPOID]}>{generateCustomPurchaseOrderId(order._id)}</Text>
                  <Text style={[styles.tableCol, styles.colSupplier]} numberOfLines={2}>{order.supplier.company_name}</Text>
                  <Text style={[styles.tableCol, styles.colDate]}>{formatDate(order.order_date)}</Text>
                  <Text style={[styles.tableCol, styles.colProductName]} numberOfLines={2}>{item.product_Name}</Text>
                  <Text style={[styles.tableCol, styles.colDescription]} numberOfLines={2}>{item.product_Description}</Text>
                  <Text style={[styles.tableCol, styles.colStock]}>{item.product_Current_Stock}</Text>
                  <Text style={[styles.tableCol, styles.colMinStock]}>{item.product_Minimum_Stock_Level}</Text>
                  <Text style={[styles.tableCol, styles.colMaxStock]}>{item.product_Maximum_Stock_Level}</Text>
                  <Text style={[styles.tableCol, styles.colQuantity]}>{item.quantity}</Text>
                  <Text style={[styles.tableCol, styles.colStatus]}>{item.status}</Text>
                  <Text style={[styles.tableCol, styles.colDocStatus]}>{order.order_status}</Text>
                  <Text style={[styles.tableColLast, styles.colCreatedBy]} numberOfLines={2}>
                    {`${order.user.first_name} ${order.user?.last_name || ''}`}
                  </Text>
                </View>
              ))}
            </React.Fragment>
          ))}
        </View>

        <View style={styles.footer}>
          <Text style={styles.sectionText}>
            Report Generated on {formatDate(new Date())}
          </Text>
          <Text style={styles.footerDetails}>
            Contact: support@cegminventory.com | Page 1 of 1
          </Text>
        </View>

        
      </Page>
    </Document>
  );
};

export default POpdf;
