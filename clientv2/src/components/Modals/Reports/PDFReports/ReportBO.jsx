import React, { useEffect, useState } from "react";
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Image,
  Font,
} from "@react-pdf/renderer";
import axios from "axios";
import logo from "../../../../assets/images/cokins-logo.png";

// Import Roboto Font
import RobotoRegular from "../../../../assets/fonts/Roboto-Regular.ttf";
import RobotoBold from "../../../../assets/fonts/Roboto-Bold.ttf";

import { generateCustomPurchaseOrderId, generateCustomBackOrderId, generateCustomProductId } from "../../../../customize/customizeId";

const PORT = 3000;

Font.register({
  family: "Roboto",
  fonts: [{ src: RobotoRegular }, { src: RobotoBold, fontWeight: "bold" }],
});

const styles = StyleSheet.create({
  page: { padding: 20 },
  header: {
    marginBottom: 10,
    alignItems: "center",
  },
  logo: {
    width: 50,
    height: 50,
    marginBottom: 5,
  },
  companyName: {
    fontSize: 12,
    textAlign: "center",
    fontFamily: "Roboto",
    fontWeight: "bold",
  },
  reportTitle: {
    fontSize: 12,
    marginTop: 5,
    fontWeight: "bold",
    textAlign: "center",
    fontFamily: "Roboto",
  },
  sectionText: { fontSize: 10, textAlign: "center", marginTop: 5 },
  sectionText2: {
    fontSize: 10,
    textAlign: "left",
    marginTop: 5,
    fontFamily: "Roboto",
  },
  boldText: {
    fontWeight: "bold",
  },
  table: {
    display: "flex",
    width: "100%",
    border: "1px solid black",
    marginTop: 10,
  },

  tableRow: {
    flexDirection: "row",
    borderBottom: "1px solid black",
    flexWrap: "wrap",
  },
  tableCol: {
    flexGrow: 1,
    width: "10%",
    borderRight: "1px solid black",
    padding: 4,
    fontSize: 10,
    textAlign: "start",
    wordWrap: "break-word",
  },
  tableColHeader: {
    flexGrow: 1,
    width: "10%",
    borderRight: "1px solid black",
    padding: 6,
    fontSize: 12,
    fontWeight: "bold",
    textAlign: "center",
    color: "#fff",
    backgroundColor: "#4e73df", // Simulate gradient using solid color
  },
  tableColHeaderAlt: {
    flexGrow: 1,
    width: "10%",
    borderRight: "1px solid black",
    padding: 6,
    fontSize: 12,
    fontWeight: "bold",
    textAlign: "center",
    color: "#fff",
    backgroundColor: "#331373", // Another shade for alternating effect
  },
  footer: {
    marginTop: 20,
    fontSize: 10,
    textAlign: "center",
  },
  footerDetails: {
    fontSize: 9,
    marginTop: 5,
    textAlign: "center",
  },
});

const formatDate = (date) => {
  const options = { day: "numeric", month: "long", year: "numeric" };
  return new Date(date).toLocaleDateString("en-US", options);
};

const BOpdf = ({ data }) => {
  const userDetails = JSON.parse(localStorage.getItem('user')) || {};
  const generatedBy = userDetails ? `${userDetails.firstName || ''} ${userDetails.lastName || ''}` : 'Unknown User';

  useEffect(() => {
    
  }, []);

  return (
    <Document>
      <Page style={styles.page} size="A4" orientation="landscape">
        <View style={styles.header}>
          <Image style={styles.logo} src={logo} />
          <Text style={styles.companyName}>CEGM INVENTORY SYSTEMS</Text>
          <Text style={[styles.sectionText]}>
            109 Kayang St, Baguio, 2600 Benguet
          </Text>
          <Text style={[styles.sectionText]}>cokinsgenmdse0603@gmail.com</Text>
        </View>
        <View
          style={{
            borderBottomWidth: 0.5,
            borderBottomColor: "#000",
            marginVertical: 5,
          }}
        />
        <View style={styles.left}>
          <Text style={[styles.reportTitle, { fontWeight: "bold" }]}>
            BACKORDER REPORT
          </Text>
          <Text style={styles.sectionText2}>
            <Text style={{ fontWeight: "bold" }}>No. of Backorder: </Text>
            {data.length}
          </Text>
          <Text style={styles.sectionText2}>
            <Text style={{ fontWeight: "bold" }}>Document Name: </Text>
            Backorder Report
          </Text>
          <Text style={styles.sectionText2}>
            <Text style={{ fontWeight: "bold" }}>
              Backorder generated by:{" "}
            </Text>
            {generatedBy}
          </Text>
        </View>

        <View style={styles.table}>
          <View style={styles.tableRow}>
            <Text style={styles.tableColHeader}>BO ID</Text>
            <Text style={styles.tableColHeader}>PO ID</Text>
            <Text style={styles.tableColHeader}>Supplier</Text>
            <Text style={styles.tableColHeader}>Order Date</Text>
            <Text style={styles.tableColHeader}>Product ID</Text>
            <Text style={styles.tableColHeader}>Product Quantity</Text>
            <Text style={styles.tableColHeader}>Status of Document</Text>
            <Text style={styles.tableColHeader}>Created by</Text>
          </View>

          {data.map((order, index) => (
            <React.Fragment key={index}>
              {order.items.map((item, itemIndex) => (
                <View
                  style={[
                    styles.tableRow,
                    { backgroundColor: itemIndex % 2 === 0 ? "#f9f9f9" : "#fff" },
                  ]}
                  key={`${index}-${itemIndex}`}
                >
                  <Text style={styles.tableCol}>{generateCustomBackOrderId(order._id)}</Text>
                  <Text style={styles.tableCol}>{generateCustomPurchaseOrderId(order.po.po_id)}</Text>
                  <Text style={styles.tableCol}>{order.supplier.company_name || "N/A"}</Text>
                  <Text style={styles.tableCol}>{formatDate(order.order_date)}</Text>
                  <Text style={styles.tableCol}>{generateCustomProductId(item._id)}</Text>
                  <Text style={styles.tableCol}>{item.backorder_quantity}</Text>
                  <Text style={styles.tableCol}>{order.order_status}</Text>
                  <Text style={styles.tableCol}>
                    {order.user.first_name} {order.user.last_name}
                  </Text>
                </View>
              ))}
            </React.Fragment>
          ))}
        </View>

        <View style={styles.footer}>
          <Text style={styles.sectionText}>
            Report Generated on {formatDate(new Date())}
          </Text>
          <Text style={styles.footerDetails}>
            Contact: support@cegminventory.com | Page 1 of 1
          </Text>
        </View>

        
      </Page>
    </Document>
  );
};

export default BOpdf;
